# Use base image with build arguments
FROM ghcr.io/upamune/duckdb-hybrid-doc-search:latest AS builder

# Define build arguments with defaults
ARG DOCS_DIR=./docs
ARG EMBEDDING_MODEL=cl-nagoya/ruri-v3-310m
ARG RERANK_MODEL=cl-nagoya/ruri-v3-reranker-310m

# Copy documents from specified directory
COPY ${DOCS_DIR} /app/docs

# Create index with specified model - this will download and cache the embedding model
RUN duckdb-hybrid-doc-search index /app/docs \
    --db /app/index.duckdb \
    --embedding-model ${EMBEDDING_MODEL} \
    --trim-path-prefix "/app/"

# Pre-download and cache the embedding and reranker models
RUN duckdb-hybrid-doc-search download-models ${EMBEDDING_MODEL} ${RERANK_MODEL}

WORKDIR /app

# Define default transport (can be overridden at runtime)
ARG TRANSPORT=stdio
ARG HOST=0.0.0.0
ARG PORT=8765
ARG PATH=/mcp

# Run the server with the specified transport
# Note: The transport type can be overridden at runtime with:
# docker run -e TRANSPORT=streamable-http -e HOST=0.0.0.0 -e PORT=8765 -e PATH=/mcp ...
ENTRYPOINT ["sh", "-c"]
CMD ["if [ \"$TRANSPORT\" = \"stdio\" ]; then \
      duckdb-hybrid-doc-search serve --db /app/index.duckdb --rerank-model cl-nagoya/ruri-v3-reranker-310m --transport stdio; \
    elif [ \"$TRANSPORT\" = \"streamable-http\" ]; then \
      duckdb-hybrid-doc-search serve --db /app/index.duckdb --rerank-model cl-nagoya/ruri-v3-reranker-310m --transport streamable-http --host $HOST --port $PORT --path $PATH; \
    else \
      echo \"Unknown transport: $TRANSPORT\"; exit 1; \
    fi"]
